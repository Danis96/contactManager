{"version":3,"sources":["components/layouts/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContacts.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContacts.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","style","styles","navbarBrand","href","title","marginOfLinks","to","defaultProps","color","marginLeft","paddingTop","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onDeleteContact","a","delete","name","email","phone","website","Fragment","sortD","onClick","delX","bind","pencil","cursor","float","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContacts","errors","e","target","onSubmit","preventDefault","console","log","newContact","post","history","push","About","NotFound","EditContacts","updContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3d7a072.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    return ( \r\n        <nav className='navbar navbar-expand-sm  navbar-dark bg-danger mb-3 py-0' >\r\n            <h4>\r\n               <a style={styles.navbarBrand} href='/' className='navbar-brand'>\r\n                     {props.title}\r\n               </a>\r\n            </h4>\r\n            <ul className='navbar-nav mr-auto' style={styles.marginOfLinks}>\r\n                <li className='nav-item'>\r\n                    <Link  to='/' className='nav-link'>\r\n                        <i className='fas fa-home'></i>    HOME\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link  to='/contact/add' className='nav-link'>\r\n                        <i className='fas fa-plus'></i>   ADD\r\n                    </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <Link  to='/about' className='nav-link'>\r\n                        <i className='fas fa-question'></i>    ABOUT\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n      );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Manager App'\r\n}\r\n\r\nconst styles = {\r\n    marginOfLinks: {\r\n        color: '#fff'\r\n    },\r\n    navbarBrand: {\r\n        marginLeft: '50px',\r\n        paddingTop: 8\r\n    }\r\n}\r\n\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        \r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => { this.setState(state => reducer(state, action)) }\r\n    }\r\n\r\n    async componentDidMount(){\r\n         const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n         this.setState({ contacts: res.data  })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n\r\n    state = {\r\n        showContactInfo:false\r\n    }\r\n\r\n    onDeleteContact = async (id,dispatch) => {\r\n\r\n       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n       dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id\r\n    })\r\n\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { id, name, email, phone,  website } = this.props.contacts;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const {dispatch} = value;\r\n                        return (\r\n                            <React.Fragment>\r\n                                \r\n                                <h4>\r\n                                    {name}\r\n                                    <i className='fas fa-sort-down' style={styles.sortD} onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} />\r\n                                    <i className='fas fa-times' style={styles.delX} onClick={this.onDeleteContact.bind(this,id,dispatch)} />\r\n                                    <Link to={`contact/edit/${id}`}>\r\n                                        <i className='fas fa-pencil-alt' style={styles.pencil}></i>\r\n                                    </Link>\r\n                                </h4>\r\n                                {\r\n                                    showContactInfo ? (\r\n                                        <div className='card card-body mb-3'>\r\n                                            <ul className='list-group'>\r\n                                                <li className='list-group-item'>\r\n                                                    {email}\r\n                                                </li>\r\n                                                <li className='list-group-item'>\r\n                                                    {phone}\r\n                                                </li>\r\n                                                <li className='list-group-item'>\r\n                                                    {website}\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    sortD: {\r\n        marginLeft: '10px',\r\n        cursor: 'pointer',\r\n\r\n        \r\n    },\r\n    delX: {\r\n        float: 'right',\r\n        color: 'red',\r\n        cursor: 'pointer'\r\n    },\r\n    pencil: {\r\n        cursor: 'pointer',\r\n        float: 'right',\r\n        color: '#000',\r\n        marginRight: '1rem'\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Contact from './Contact';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { contacts } = value;\r\n                        return (\r\n                            <React.Fragment>\r\n                                <h1 className='display-4 mb-2' >\r\n                                    <span className='text-danger'>Contact</span> List\r\n                                </h1>\r\n                              {  \r\n                                contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contacts={contact}\r\n                                />\r\n                                ))\r\n                              }\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n    return ( \r\n        <div className='form-group'>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input  className={classnames('form-control form-contol-lg', {\r\n                   'is-invalid': error\r\n            })}\r\n                    type={type} \r\n                    placeholder={placeholder} \r\n                    name={name} \r\n                    value={value} \r\n                    onChange={onChange}\r\n                    />\r\n             {\r\n                 error && <div className='invalid-feedback'>\r\n                                     {error}\r\n                          </div>\r\n             }\r\n        </div>\r\n\r\n     );\r\n}\r\n\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n \r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContacts extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        website: '',\r\n      \r\n        errors: {}\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n        const { name, email, phone, website } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (website === '') {\r\n            this.setState({\r\n                errors: { website: 'website is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n            website,\r\n          \r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({\r\n            type: 'ADD_CONTACT',\r\n            payload: res.data\r\n        })\r\n\r\n        \r\n\r\n\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n           website: '',\r\n            errors: {}\r\n        });\r\n\r\n\r\n        this.props.history.push('/');\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone,  website, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { dispatch } = value;\r\n                        return (\r\n                            <div className='card mb-3'>\r\n                                <div className='card-header'>\r\n                                    Add Contact\r\n                </div>\r\n                                <div className='card-body'>\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter name'\r\n                                            name='name'\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            label='Name'\r\n                                            error={errors.name}\r\n                                        />\r\n\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter email'\r\n                                            type='email'\r\n                                            name='email'\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            label='Email'\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter phone'\r\n                                            name='phone'\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            label='Phone'\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter website'\r\n                                            name='website'\r\n                                            value={website}\r\n                                            onChange={this.onChange}\r\n                                            label='Website'\r\n                                            error={errors.website}\r\n                                        />\r\n                                        <input type='submit' value='Add Contact' className='btn btn-light btn-block' />\r\n\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContacts;","import React from 'react'\r\n\r\n\r\nconst About = () => {\r\n    return ( \r\n        <div>\r\n            <h1 className='display-4'>About <span className='text-danger'>Contact</span> Manager</h1>\r\n            <p className='lead'>Simple app to manage contacts</p>\r\n            <p className='text-secondary'>Version 1.0.0 </p>\r\n            <p className='text-secondary'>Developed by Danis Preldzic</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default About;","import React from 'react'\r\n\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n         <div>\r\n             <h1 className='display-4'>\r\n                 404 PAGE NOT FOUND\r\n             </h1>\r\n             <p className='lead'>Sorry, that page does not exist </p>\r\n         </div>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layouts/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContacts extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        website: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n            website: contact.website,\r\n        });\r\n\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n\r\n        const { name, email, phone, website } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: { name: 'Name is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: { email: 'Email is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: { phone: 'Phone is required' }\r\n            });\r\n            return;\r\n        }\r\n        if (website === '') {\r\n            this.setState({\r\n                errors: { website: 'website is required' }\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        const updContact = {\r\n              name,\r\n              email,\r\n              phone,\r\n              website\r\n        }\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: res.data\r\n        })\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            website: '',\r\n\r\n            errors: {}\r\n        });\r\n\r\n\r\n        this.props.history.push('/');\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, website, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { dispatch } = value;\r\n                        return (\r\n                            <div className='card mb-3'>\r\n                                <div className='card-header'>\r\n                                    Edit Contact\r\n                </div>\r\n                                <div className='card-body'>\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter name'\r\n                                            name='name'\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            label='Name'\r\n                                            error={errors.name}\r\n                                        />\r\n\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter email'\r\n                                            type='email'\r\n                                            name='email'\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            label='Email'\r\n                                            error={errors.email}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter phone'\r\n                                            name='phone'\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            label='Phone'\r\n                                            error={errors.phone}\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            placeholder='Enter website'\r\n                                            name='website'\r\n                                            value={website}\r\n                                            onChange={this.onChange}\r\n                                            label='Website'\r\n                                            error={errors.website}\r\n                                        />\r\n                                        <input type='submit' value='Update Contact' className='btn btn-light btn-block' />\r\n\r\n                                    </form>\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContacts;","import React from 'react';\nimport Header from './components/layouts/Header';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacts from './components/contacts/Contacts';\nimport AddContacts from './components/contacts/AddContacts';\nimport About from './components/pages/About';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport NotFound from './components/pages/NotFound';\nimport EditContacts from './components/contacts/EditContacts';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className='App'>\n          <Header title='Contact Manager' />\n          <div className='container'>\n            <Switch>\n              <Route  exact path='/' component={Contacts} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/contact/add' component={AddContacts} />\n              <Route exact path='/contact/edit/:id' component={EditContacts} />\n              <Route  component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}